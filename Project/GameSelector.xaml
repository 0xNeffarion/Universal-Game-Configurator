<Window x:Name="GameSelectionWindow" x:Class="Universal_Game_Configurator.GameSelector"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Universal_Game_Configurator"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:data="clr-namespace:Universal_Game_Configurator.Objects.Data"
        xmlns:converters="clr-namespace:Universal_Game_Configurator.Converters"
        xmlns:wi="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        mc:Ignorable="d"
        Title="Universal Game Configurator - Game selection" Height="579" Width="615" 
        Icon="Resources/UGC_Icon.ico" WindowStartupLocation="CenterScreen" TextOptions.TextFormattingMode="Display" 
        MinHeight="320" MinWidth="460" UseLayoutRounding="True" FontFamily="Open Sans" 
        WindowStyle="None" AllowsTransparency="True" Background="{x:Null}" ResizeMode="CanResizeWithGrip" 
        DataContext="GameViewModel">
    <Window.Resources>
        <SolidColorBrush x:Key="ListViewItemSelectedBackgroundThemeBrush" Color="Gray" />
        <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style x:Key="borderRem" TargetType="xctk:WatermarkTextBox">
            <Style.Triggers>
                <Trigger Value="True" Property="IsFocused">
                    <Setter Property="BorderBrush" Value="#3FABADB3"></Setter>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderBrush" Value="#3FABADB3"></Setter>
        </Style>
        <Style x:Key="myListViewStyle" >
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFACD3DE" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"></SolidColorBrush>
            </Style.Resources>
        </Style>
    </Window.Resources>
    <Border CornerRadius="5" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="#FF555555" BorderThickness="1" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="34"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="29"></RowDefinition>
                <RowDefinition Height="38"/>
                <RowDefinition Height="41"/>
                <RowDefinition Height="74*"/>
                <RowDefinition Height="139*"/>
                <RowDefinition Height="177*"/>
            </Grid.RowDefinitions>
            <DockPanel x:Name="titleBorder" Grid.ColumnSpan="2" Background="#FF424242" MouseDown="titleBorder_MouseDown">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                    <TextBlock x:Name="windowTitle" Text="{Binding Title,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Foreground="White" ForceCursor="True" FontWeight="SemiBold" FontSize="14" VerticalAlignment="Center"></TextBlock>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,4,0" DockPanel.Dock="Right">
                    <Button x:Name="btnMinimizeWindow" FontFamily="Marlett" Content="0" Margin="1,1,4,1" VerticalAlignment="Center" Padding="7,4" 
                            FontWeight="Bold" Foreground="White"
                            Command="{Binding MinimizeWindowCommand}" 
                            CommandParameter="{Binding ElementName=GameSelectionWindow}" />
                    <Button x:Name="btnCloseWindow" FontFamily="Marlett" Content="r" Margin="1" VerticalAlignment="Center" Padding="7,4" FontWeight="Bold" Foreground="White" 
                            Background="#FFCB2626"
                            Command="{Binding CloseWindowCommand}" 
                            CommandParameter="{Binding ElementName=GameSelectionWindow}"/>
                </StackPanel>
            </DockPanel>
            <ListView x:Name="GamesListView" Grid.ColumnSpan="2" Grid.Column="0" Grid.RowSpan="3" Margin="10,5,10,20" Grid.Row="3" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" Padding="0,0,0,6" SelectionMode="Single" SizeChanged="GamesListView_SizeChanged" Foreground="#FFFBFBFB" 
                      BorderBrush="LightGray" BorderThickness="0" Background="{x:Null}" ItemsSource="{Binding Games}" SelectedIndex="{Binding SelectedGameIndex}" >
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ListViewItemFocusVisual}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="HoverOn">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="HoverOff">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="SelectedOn">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="SelectedOff">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="FocussedOn">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="FocussedOff">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" x:Name="border">
                                        <Grid Margin="0">
                                            <Rectangle x:Name="Background" IsHitTestVisible="True" Opacity="0.25" Fill="{DynamicResource NormalBrush}" RadiusX="1" RadiusY="1"/>
                                            <Rectangle x:Name="HoverRectangle" IsHitTestVisible="True" Opacity="0" Fill="{DynamicResource NormalBrush}" RadiusX="1" RadiusY="1"/>
                                            <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="True" Opacity="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#F26E6E6E" Offset="1"/>
                                                        <GradientStop Color="#F2DCDCDC" Offset="0"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" VerticalAlignment="Stretch" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                            </MultiTrigger.ExitActions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="Selector.IsSelected" Value="False" />
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelected" Value="True" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                            <Setter Property="Fill" TargetName="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true" />
                                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView x:Name="dataGridView" ColumnHeaderContainerStyle="{StaticResource myHeaderStyle}" AllowsColumnReorder="False">
                        <GridViewColumn x:Name="GridCol1" Header="Installed game">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="6" BorderBrush="#FF747474" BorderThickness="1" Width="65" Height="65" CornerRadius="9" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <Image RenderOptions.BitmapScalingMode="HighQuality" x:Name="imgGameIcon" Width="65" Height="65" Stretch="UniformToFill"
                                                   Source="{Binding Path=ImageName, Converter={x:Static converters:GameImageConverter.Instance}}">
                                                <Image.Clip>
                                                    <RectangleGeometry RadiusX="9" RadiusY="9" Rect="0,0,64,64"/>
                                                </Image.Clip>
                                            </Image>
                                        </Border>
                                        <TextBlock x:Name="txtGameName" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" 
                                                   FontWeight="Bold" Margin="15,0,0,0" TextTrimming="WordEllipsis"
                                                   Text="{Binding Name}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="GridCol2" Header="Genre">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                                        <TextBlock x:Name="txtGameType" VerticalAlignment="Stretch" FontSize="14" FontWeight="SemiBold" Margin="0" HorizontalAlignment="Center" 
                                               TextAlignment="Center" TextTrimming="CharacterEllipsis" TextOptions.TextFormattingMode="Display"
                                               Text="{Binding Path=GenreObj, Converter={x:Static converters:GenresConverter.Instance}}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="GridCol3" Header="">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Image x:Name="imgNext" VerticalAlignment="Center" Width="24" 
                                           Height="24" Source="Resources/arrow_goforward.png" Cursor="Hand" ToolTip="Configure" 
                                               IsHitTestVisible="True" Margin="0,0,5,0" >
                                            <wi:Interaction.Triggers>
                                                <wi:EventTrigger EventName="MouseDown">
                                                    <!-- {Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}} -->
                                                    <wi:InvokeCommandAction CommandParameter="{Binding ElementName=GameSelectionWindow}" 
                                                                           Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, 
                                                                           Path=DataContext.ConfigureCommand}"/>
                                                </wi:EventTrigger>
                                            </wi:Interaction.Triggers>
                                        </Image>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <TextBlock x:Name="TitleText" TextWrapping="Wrap" Text="Select the game to configure:" Grid.Row="1"
                   Grid.ColumnSpan="2" Grid.Column="0" TextAlignment="Center" VerticalAlignment="Center" FontSize="17" FontWeight="SemiBold" Height="23" Margin="0,15,0,0" Foreground="#FFE0E0E0"/>
            <DockPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"/>
            <Border Margin="10,10,20,5" Grid.Row="2" Grid.Column="0" BorderThickness="1" BorderBrush="#FF898989" Grid.ColumnSpan="2">
                <xctk:WatermarkTextBox Style="{StaticResource borderRem}" x:Name="txtBoxSearch"  TextWrapping="Wrap" Height="26" VerticalAlignment="Center" 
                                       TextChanged="txtBoxSearch_TextChanged" Foreground="White" VerticalContentAlignment="Center" Background="{x:Null}" BorderThickness="0" >
                    <xctk:WatermarkTextBox.Watermark>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="Resources/magnifier.png" Width="16" Height="16" Stretch="Uniform" />
                            <TextBlock Text="Search installed games..." Margin="4,2,0,0" Foreground="#FFF0F0F0" />
                        </StackPanel>
                    </xctk:WatermarkTextBox.Watermark>
                </xctk:WatermarkTextBox>
            </Border>
            <Image x:Name="imgRefresh" Grid.Column="1" Grid.Row="1" Source="Resources/arrows_refresh.png" Margin="7,14,10,11" Cursor="Hand"
                   ToolTip="Refresh list" >
                <wi:Interaction.Triggers>
                    <wi:EventTrigger EventName="MouseDown">
                        <ei:CallMethodAction
                                TargetObject="{Binding}"
                                MethodName="GetGames"/>
                    </wi:EventTrigger>
                </wi:Interaction.Triggers>
            </Image>
        </Grid>
    </Border>
</Window>
